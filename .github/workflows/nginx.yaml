name: project1

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths: 
      - 'project2/**'
#   pull_request:
#     branches:
#       - main

env:
  IMAGE_NAME: "bgdevopslearn/projects"

jobs:
  Creating_Image:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # - name: Log in to Docker Hub using docker login
    #   run: |
    #     docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

    - name: Build the Docker image
      run: |
        # Generate a unique tag based on the commit SHA and timestamp
        TIMESTAMP=$(date +'%Y%m%d%H%M%S')
        UNIQUE_TAG="${GITHUB_SHA:0:7}_${TIMESTAMP}"
        echo "Generated tag: $UNIQUE_TAG"
        echo "UNIQUE_TAG=$UNIQUE_TAG" >> $GITHUB_ENV

        cd project1/
        # Build the Docker image with the unique tag
        docker build -t ${{ secrets.DOCKER_USERNAME }}/projects:$UNIQUE_TAG -f Dockerfile .

    - name: Push the Docker image to Docker Hub
      run: |
        # Push the Docker image with the unique tag
        docker push ${{ secrets.DOCKER_USERNAME }}/projects:$UNIQUE_TAG
        echo "IMAGE_TAG=$UNIQUE_TAG" >> $GITHUB_ENV

    - name: Configure SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.ACCESS_KEY_SSH }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan github.com >> ~/.ssh/known_hosts

    - name: SSH on server
      run: |
        ls
        scp -o StrictHostKeyChecking=no ./project1/cleanup_docker.sh ubuntu@${{ vars.SERVER_IP }}:~/.
        ssh -o StrictHostKeyChecking=no ubuntu@${{ vars.SERVER_IP }} 'bash -s' << EOF
            chmod +x ./cleanup_docker.sh
          # Run the cleanup script with the passed image name and tag
            ./cleanup_docker.sh ${{ env.IMAGE_NAME }}:$UNIQUE_TAG  > output.txt
        EOF
